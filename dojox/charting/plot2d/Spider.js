//>>built
define("dojox/charting/plot2d/Spider",["dojo/_base/lang","dojo/_base/declare","dojo/_base/connect","dojo/_base/array","dojo/dom-geometry","dojo/_base/fx","dojo/fx","dojo/sniff","./Base","./_PlotEvents","./common","../axis2d/common","dojox/gfx","dojox/gfx/matrix","dojox/gfx/fx","dojox/lang/functional","dojox/lang/utils","dojo/fx/easing"],function(e,t,a,i,r,o,d,n,l,s,m,u,f,h,c,y,v,M){return t("dojox.charting.plot2d.Spider",[l,s],{defaultParams:{labels:!0,ticks:!1,fixed:!0,precision:1,labelOffset:-10,labelStyle:"default",htmlLabels:!0,startAngle:-90,divisions:3,axisColor:"",axisWidth:0,spiderColor:"",spiderWidth:0,seriesWidth:0,seriesFillAlpha:.2,spiderOrigin:.16,markerSize:3,spiderType:"polygon",animationType:M.backOut,animate:null,axisTickFont:"",axisTickFontColor:"",axisFont:"",axisFontColor:""},optionalParams:{radius:0,font:"",fontColor:""},constructor:function(t,a){this.opt=e.clone(this.defaultParams),v.updateWithObject(this.opt,a),v.updateWithPattern(this.opt,a,this.optionalParams),this.dyn=[],this.datas={},this.labelKey=[],this.oldSeriePoints={},this.animate=null===this.opt.animate?{}:this.opt.animate,this.animations={}},clear:function(){return this.inherited(arguments),this.dyn=[],this.axes=[],this.datas={},this.labelKey=[],this.oldSeriePoints={},this.animations={},this},setAxis:function(e){return e&&(void 0!=e.opt.min&&(this.datas[e.name].min=e.opt.min),void 0!=e.opt.max&&(this.datas[e.name].max=e.opt.max)),this},addSeries:function(e){this.series.push(e);var t;for(t in e.data){var a=e.data[t],i=this.datas[t];if(i)i.vlist.push(a),i.min=Math.min(i.min,a),i.max=Math.max(i.max,a);else{var r="__"+t;this.axes.push(r),this[r]=t,this.datas[t]={min:a,max:a,vlist:[a]}}}if(this.labelKey.length<=0)for(t in e.data)this.labelKey.push(t);return this},getSeriesStats:function(){return m.collectSimpleStats(this.series,function(e){return null===e})},render:function(e,t){if(!this.dirty)return this;this.dirty=!1,this.cleanGroup();var a=this.group,o=this.chart.theme;if(this.resetEvents(),!this.series||!this.series.length)return this;var d,n,l,s,m,c,v,M,g,p,b,k,w,F,_,I,j,x,A,E,z=this.opt,T=o.axis,S=(e.width-t.l-t.r)/2,G=(e.height-t.t-t.b)/2,C=Math.min(S,G),N=z.font||T.majorTick&&T.majorTick.font||T.tick&&T.tick.font||"normal normal normal 7pt Tahoma",D=z.axisFont||T.tick&&T.tick.titleFont||"normal normal normal 11pt Tahoma",P=z.axisTickFontColor||T.majorTick&&T.majorTick.fontColor||T.tick&&T.tick.fontColor||"silver",H=z.axisFontColor||T.tick&&T.tick.titleFontColor||"black",Q=z.axisColor||T.tick&&T.tick.axisColor||"silver",L=z.spiderColor||T.tick&&T.tick.spiderColor||"silver",q=z.axisWidth||T.stroke&&T.stroke.width||2,B=z.spiderWidth||T.stroke&&T.stroke.width||2,O=z.seriesWidth||T.stroke&&T.stroke.width||2,R=f.normalizedLength(f.splitFontString(D).size),K=h._degToRad(z.startAngle),U=K,V=z.spiderOrigin,W=z.divisions>=3?z.divisions:3,J=z.markerSize,Y=z.spiderType,$=z.animationType,X=z.labelOffset<-10?z.labelOffset:-10,Z=.2;z.labels&&(d=i.map(this.series,function(e){return e.name},this),n=y.foldl1(y.map(d,function(e){var t=o.series.font;return f._base._getTextBox(e,{font:t}).w},this),"Math.max(a, b)")/2,C=Math.min(S-2*n,G-R)+X,l=C-X),"radius"in z&&(C=z.radius,l=C-X),C/=1+Z;for(var ee={cx:t.l+S,cy:t.t+G,r:C},g=0;g<this.series.length;g++)if(_=this.series[g],this.dirty||_.dirty){if(_.cleanGroup(),null!==(I=_.data)&&(k=this._getObjectLength(I),(!s||s.length<=0)&&(s=[],m=[],M=[],this._buildPoints(s,k,ee,C,U,!0,e),this._buildPoints(m,k,ee,C*V,U,!0,e),this._buildPoints(M,k,ee,l,U,!1,e),W>2)))for(c=[],v=[],p=0;p<W-2;p++)c[p]=[],this._buildPoints(c[p],k,ee,C*(V+(1-V)*(p+1)/(W-1)),U,!0,e),v[p]=C*(V+(1-V)*(p+1)/(W-1))}else o.skip();var te=a.createGroup(),ae={color:Q,width:q},ie={color:L,width:B};for(p=s.length-1;p>=0;--p){b=s[p];var re={x:b.x+(b.x-ee.cx)*Z,y:b.y+(b.y-ee.cy)*Z},oe={x:b.x+(b.x-ee.cx)*Z/2,y:b.y+(b.y-ee.cy)*Z/2};te.createLine({x1:ee.cx,y1:ee.cy,x2:re.x,y2:re.y}).setStroke(ae),this._drawArrow(te,re,oe,ae)}var de=a.createGroup();for(p=M.length-1;p>=0;--p){b=M[p],w=f._base._getTextBox(this.labelKey[p],{font:D}).w||0,F=this.opt.htmlLabels&&"vml"!=f.renderer?"html":"gfx";var ne=u.createText[F](this.chart,de,r.isBodyLtr()||"html"!=F?b.x:b.x+w-e.width,b.y,"middle",this.labelKey[p],D,H);this.opt.htmlLabels&&this.htmlElements.push(ne)}var le=a.createGroup();if("polygon"==Y){if(le.createPolyline(s).setStroke(ie),le.createPolyline(m).setStroke(ie),c.length>0)for(p=c.length-1;p>=0;--p)le.createPolyline(c[p]).setStroke(ie)}else if(le.createCircle({cx:ee.cx,cy:ee.cy,r:C}).setStroke(ie),le.createCircle({cx:ee.cx,cy:ee.cy,r:C*V}).setStroke(ie),v.length>0)for(p=v.length-1;p>=0;--p)le.createCircle({cx:ee.cx,cy:ee.cy,r:v[p]}).setStroke(ie);k=this._getObjectLength(this.datas);var se=a.createGroup(),me=0;for(var ue in this.datas){for(j=this.datas[ue],x=j.min,A=j.max,E=A-x,pe=U+2*Math.PI*me/k,g=0;g<W;g++){var fe=x+E*g/(W-1);b=this._getCoordinate(ee,C*(V+(1-V)*g/(W-1)),pe,e),fe=this._getLabel(fe),w=f._base._getTextBox(fe,{font:N}).w||0,F=this.opt.htmlLabels&&"vml"!=f.renderer?"html":"gfx",this.opt.htmlLabels&&this.htmlElements.push(u.createText[F](this.chart,se,r.isBodyLtr()||"html"!=F?b.x:b.x+w-e.width,b.y,"start",fe,N,P))}me++}for(this.chart.seriesShapes={},g=this.series.length-1;g>=0;g--)if(_=this.series[g],null!==(I=_.data)){var he=o.next("spider",[z,_]),ce=f.normalizeColor(he.series.fill),ye={color:he.series.fill,width:O};if(ce.a=z.seriesFillAlpha,_.dyn={fill:ce,stroke:ye},_.hidden)continue;var ve=[],Me=[];me=0;for(ue in I){j=this.datas[ue],x=j.min,A=j.max,E=A-x;var ge=I[ue],pe=U+2*Math.PI*me/k;b=this._getCoordinate(ee,C*(V+(1-V)*(ge-x)/E),pe,e),ve.push(b),Me.push({sname:_.name,key:ue,data:ge}),me++}ve[ve.length]=ve[0],Me[Me.length]=Me[0];var be=this._getBoundary(ve),ke=_.group,we=this.oldSeriePoints[_.name],Fe=this._createSeriesEntry(ke,we||m,ve,ce,ye,C,V,J,$);this.chart.seriesShapes[_.name]=Fe,this.oldSeriePoints[_.name]=ve;var _e={element:"spider_poly",index:g,id:"spider_poly_"+_.name,run:_,plot:this,shape:Fe.poly,parent:ke,brect:be,cx:ee.cx,cy:ee.cy,cr:C,f:ce,s:a};this._connectEvents(_e);var Ie={element:"spider_plot",index:g,id:"spider_plot_"+_.name,run:_,plot:this,shape:_.group};this._connectEvents(Ie),i.forEach(Fe.circles,function(e,t){var i={element:"spider_circle",index:t,id:"spider_circle_"+_.name+t,run:_,plot:this,shape:e,parent:ke,tdata:Me[t],cx:ve[t].x,cy:ve[t].y,f:ce,s:a};this._connectEvents(i)},this)}return this},_createSeriesEntry:function(t,r,n,l,s,m,u,f,h){for(var c=this.animate?r:n,y=t.createPolyline(c).setFill(l).setStroke(s),v=[],M=0;M<c.length;M++){var g=c[M],p=f,b=t.createCircle({cx:g.x,cy:g.y,r:p}).setFill(l).setStroke(s);v.push(b)}if(this.animate){var k=i.map(n,function(t,i){var d=r[i],n=new o.Animation(e.delegate({duration:1e3,easing:h,curve:[d.y,t.y]},this.animate)),l=y,s=v[i];return a.connect(n,"onAnimate",function(e){var t=l.getShape();t.points[i].y=e,l.setShape(t);var a=s.getShape();a.cy=e,s.setShape(a)}),n},this),w=i.map(n,function(t,i){var d=r[i],n=new o.Animation(e.delegate({duration:1e3,easing:h,curve:[d.x,t.x]},this.animate)),l=y,s=v[i];return a.connect(n,"onAnimate",function(e){var t=l.getShape();t.points[i].x=e,l.setShape(t);var a=s.getShape();a.cx=e,s.setShape(a)}),n},this);d.combine(k.concat(w)).play()}return{group:t,poly:y,circles:v}},plotEvent:function(e){"spider_plot"==e.element&&("onmouseover"!=e.type||n("ie")||e.shape.moveToFront())},tooltipFunc:function(e){return"spider_circle"==e.element?e.tdata.sname+"<br/>"+e.tdata.key+"<br/>"+e.tdata.data:null},_getBoundary:function(e){for(var t=e[0].x,a=e[0].x,i=e[0].y,r=e[0].y,o=0;o<e.length;o++){var d=e[o];t=Math.max(d.x,t),i=Math.max(d.y,i),a=Math.min(d.x,a),r=Math.min(d.y,r)}return{x:a,y:r,width:t-a,height:i-r}},_drawArrow:function(e,t,a,i){var r=Math.sqrt(Math.pow(a.x-t.x,2)+Math.pow(a.y-t.y,2)),o=(a.y-t.y)/r,d=(a.x-t.x)/r,n={x:a.x+r/3*-o,y:a.y+r/3*d},l={x:a.x+r/3*o,y:a.y+r/3*-d};e.createPolyline([t,n,l]).setFill(i.color).setStroke(i)},_buildPoints:function(e,t,a,i,r,o,d){for(var n=0;n<t;n++){var l=r+2*Math.PI*n/t;e.push(this._getCoordinate(a,i,l,d))}o&&e.push(this._getCoordinate(a,i,r+2*Math.PI,d))},_getCoordinate:function(e,t,a,i){var r=e.cx+t*Math.cos(a);return n("dojo-bidi")&&this.chart.isRightToLeft()&&i&&(r=i.width-r),{x:r,y:e.cy+t*Math.sin(a)}},_getObjectLength:function(t){var a=0;if(e.isObject(t))for(var i in t)a++;return a},_getLabel:function(e){return m.getLabel(e,this.opt.fixed,this.opt.precision)}})});//# sourceMappingURL=Spider.js.map