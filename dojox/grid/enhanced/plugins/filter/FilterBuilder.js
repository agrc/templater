//>>built
define("dojox/grid/enhanced/plugins/filter/FilterBuilder",["dojo/_base/declare","dojo/_base/array","dojo/_base/lang","./_FilterExpr"],function(e,t,i,o){var r=function(e){return i.partial(function(e,t){return new o[e](t)},e)},a=function(e){return i.partial(function(e,t){return new o.LogicNOT(new o[e](t))},e)};return e("dojox.grid.enhanced.plugins.filter.FilterBuilder",null,{buildExpression:function(e){if("op"in e)return this.supportedOps[e.op.toLowerCase()](t.map(e.data,this.buildExpression,this));var o=i.mixin(this.defaultArgs[e.datatype],e.args||{});return new this.supportedTypes[e.datatype](e.data,e.isColumn,o)},supportedOps:{equalto:r("EqualTo"),lessthan:r("LessThan"),lessthanorequalto:r("LessThanOrEqualTo"),largerthan:r("LargerThan"),largerthanorequalto:r("LargerThanOrEqualTo"),contains:r("Contains"),startswith:r("StartsWith"),endswith:r("EndsWith"),notequalto:a("EqualTo"),notcontains:a("Contains"),notstartswith:a("StartsWith"),notendswith:a("EndsWith"),isempty:r("IsEmpty"),range:function(e){return new o.LogicALL(new o.LargerThanOrEqualTo(e.slice(0,2)),new o.LessThanOrEqualTo(e[0],e[2]))},logicany:r("LogicANY"),logicall:r("LogicALL")},supportedTypes:{number:o.NumberExpr,string:o.StringExpr,"boolean":o.BooleanExpr,date:o.DateExpr,time:o.TimeExpr},defaultArgs:{"boolean":{falseValue:"false",convert:function(e,t){var o=t.falseValue,r=t.trueValue;if(i.isString(e)){if(r&&e.toLowerCase()==r)return!0;if(o&&e.toLowerCase()==o)return!1}return!!e}}}})});//# sourceMappingURL=FilterBuilder.js.map