//>>built
define("dojox/grid/enhanced/plugins/filter/FilterBuilder",["dojo/_base/declare","dojo/_base/array","dojo/_base/lang","./_FilterExpr"],function(e,t,i,a){var o=function(e){return i.partial(function(e,t){return new a[e](t)},e)},r=function(e){return i.partial(function(e,t){return new a.LogicNOT(new a[e](t))},e)};return e("dojox.grid.enhanced.plugins.filter.FilterBuilder",null,{buildExpression:function(e){if("op"in e)return this.supportedOps[e.op.toLowerCase()](t.map(e.data,this.buildExpression,this));var a=i.mixin(this.defaultArgs[e.datatype],e.args||{});return new this.supportedTypes[e.datatype](e.data,e.isColumn,a)},supportedOps:{equalto:o("EqualTo"),lessthan:o("LessThan"),lessthanorequalto:o("LessThanOrEqualTo"),largerthan:o("LargerThan"),largerthanorequalto:o("LargerThanOrEqualTo"),contains:o("Contains"),startswith:o("StartsWith"),endswith:o("EndsWith"),notequalto:r("EqualTo"),notcontains:r("Contains"),notstartswith:r("StartsWith"),notendswith:r("EndsWith"),isempty:o("IsEmpty"),range:function(e){return new a.LogicALL(new a.LargerThanOrEqualTo(e.slice(0,2)),new a.LessThanOrEqualTo(e[0],e[2]))},logicany:o("LogicANY"),logicall:o("LogicALL")},supportedTypes:{number:a.NumberExpr,string:a.StringExpr,"boolean":a.BooleanExpr,date:a.DateExpr,time:a.TimeExpr},defaultArgs:{"boolean":{falseValue:"false",convert:function(e,t){var a=t.falseValue,o=t.trueValue;if(i.isString(e)){if(o&&e.toLowerCase()==o)return!0;if(a&&e.toLowerCase()==a)return!1}return!!e}}}})});//# sourceMappingURL=FilterBuilder.js.map