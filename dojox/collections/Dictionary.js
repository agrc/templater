//>>built
define("dojox/collections/Dictionary",["dojo/_base/kernel","dojo/_base/array","./_base"],function(e,t,i){return i.Dictionary=function(t){var a={};this.count=0;var r={};if(this.add=function(e,t){var r=e in a;a[e]=new i.DictionaryEntry(e,t),r||this.count++},this.clear=function(){a={},this.count=0},this.clone=function(){return new i.Dictionary(this)},this.contains=this.containsKey=function(e){return r[e]?!1:null!=a[e]},this.containsValue=function(e){for(var t=this.getIterator();t.get();)if(t.element.value==e)return!0;return!1},this.entry=function(e){return a[e]},this.forEach=function(t,i){var n=[];for(var o in a)r[o]||n.push(a[o]);e.forEach(n,t,i)},this.getKeyList=function(){return this.getIterator().map(function(e){return e.key})},this.getValueList=function(){return this.getIterator().map(function(e){return e.value})},this.item=function(e){return e in a?a[e].valueOf():void 0},this.getIterator=function(){return new i.DictionaryIterator(a)},this.remove=function(e){return e in a&&!r[e]?(delete a[e],this.count--,!0):!1},t)for(var n=t.getIterator();n.get();)this.add(n.element.key,n.element.value)},i.Dictionary});//# sourceMappingURL=Dictionary.js.map