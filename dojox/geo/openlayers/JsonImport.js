//>>built
define("dojox/geo/openlayers/JsonImport",["dojo/_base/declare","dojo/_base/xhr","dojo/_base/lang","dojo/_base/array","./LineString","./Collection","./GeometryFeature"],function(e,t,i,a,r,o,n){return e("dojox.geo.openlayers.JsonImport",null,{constructor:function(e){this._params=e},loadData:function(){var e=this._params;t.get({url:e.url,handleAs:"json",sync:!0,load:i.hitch(this,this._gotData),error:i.hitch(this,this._loadError)})},_gotData:function(e){var t=this._params.nextFeature;if(i.isFunction(t)){var r=e.layerExtent,s=r[0],d=r[1],l=s+r[2],h=d+r[3],m=e.layerExtentLL,u=m[0],c=m[1],f=u+m[2],p=c+m[3],y=u,g=p,v=f,b=c,M=e.features;for(var k in M){var w=M[k],_=w.shape,I=null;if(i.isArray(_[0])){var T=new Array;a.forEach(_,function(e){var t=this._makeGeometry(e,s,d,l,h,y,g,v,b);T.push(t)},this);var j=new o(T);I=new n(j),t.call(this,I)}else I=this._makeFeature(_,s,d,l,h,y,g,v,b),t.call(this,I)}var x=this._params.complete;i.isFunction(x)&&x.call(this,x)}},_makeGeometry:function(e,t,i,a,o,n,s,d,l){for(var h=[],m=0,u=0;u<e.length-1;u+=2){var c=e[u],f=e[u+1];m=(c-t)/(a-t);var p=m*(d-n)+n;m=(f-i)/(o-i);var y=m*(l-s)+s;h.push({x:p,y:y})}var g=new r(h);return g},_makeFeature:function(e,t,i,a,r,o,s,d,l){var h=this._makeGeometry(e,t,i,a,r,o,s,d,l),m=new n(h);return m},_loadError:function(){var e=this._params.error;i.isFunction(e)&&e.apply(this,parameters)}})});//# sourceMappingURL=JsonImport.js.map