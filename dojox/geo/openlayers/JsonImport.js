//>>built
define("dojox/geo/openlayers/JsonImport",["dojo/_base/declare","dojo/_base/xhr","dojo/_base/lang","dojo/_base/array","./LineString","./Collection","./GeometryFeature"],function(e,t,i,a,r,o,n){return e("dojox.geo.openlayers.JsonImport",null,{constructor:function(e){this._params=e},loadData:function(){var e=this._params;t.get({url:e.url,handleAs:"json",sync:!0,load:i.hitch(this,this._gotData),error:i.hitch(this,this._loadError)})},_gotData:function(e){var t=this._params.nextFeature;if(i.isFunction(t)){var r=e.layerExtent,s=r[0],d=r[1],l=s+r[2],u=d+r[3],c=e.layerExtentLL,m=c[0],h=c[1],f=m+c[2],y=h+c[3],p=m,g=y,v=f,b=h,M=e.features;for(var _ in M){var k=M[_],w=k.shape,j=null;if(i.isArray(w[0])){var x=new Array;a.forEach(w,function(e){var t=this._makeGeometry(e,s,d,l,u,p,g,v,b);x.push(t)},this);var I=new o(x);j=new n(I),t.call(this,j)}else j=this._makeFeature(w,s,d,l,u,p,g,v,b),t.call(this,j)}var T=this._params.complete;i.isFunction(T)&&T.call(this,T)}},_makeGeometry:function(e,t,i,a,o,n,s,d,l){for(var u=[],c=0,m=0;m<e.length-1;m+=2){var h=e[m],f=e[m+1];c=(h-t)/(a-t);var y=c*(d-n)+n;c=(f-i)/(o-i);var p=c*(l-s)+s;u.push({x:y,y:p})}var g=new r(u);return g},_makeFeature:function(e,t,i,a,r,o,s,d,l){var u=this._makeGeometry(e,t,i,a,r,o,s,d,l),c=new n(u);return c},_loadError:function(){var e=this._params.error;i.isFunction(e)&&e.apply(this,parameters)}})});//# sourceMappingURL=JsonImport.js.map