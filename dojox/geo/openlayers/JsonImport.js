//>>built
define("dojox/geo/openlayers/JsonImport",["dojo/_base/declare","dojo/_base/xhr","dojo/_base/lang","dojo/_base/array","./LineString","./Collection","./GeometryFeature"],function(e,t,a,i,o,r,n){return e("dojox.geo.openlayers.JsonImport",null,{constructor:function(e){this._params=e},loadData:function(){var e=this._params;t.get({url:e.url,handleAs:"json",sync:!0,load:a.hitch(this,this._gotData),error:a.hitch(this,this._loadError)})},_gotData:function(e){var t=this._params.nextFeature;if(a.isFunction(t)){var o=e.layerExtent,s=o[0],l=o[1],d=s+o[2],u=l+o[3],h=e.layerExtentLL,m=h[0],c=h[1],f=m+h[2],p=c+h[3],g=m,v=p,y=f,k=c,b=e.features;for(var M in b){var j=b[M],w=j.shape,x=null;if(a.isArray(w[0])){var _=new Array;i.forEach(w,function(e){var t=this._makeGeometry(e,s,l,d,u,g,v,y,k);_.push(t)},this);var I=new r(_);x=new n(I),t.call(this,x)}else x=this._makeFeature(w,s,l,d,u,g,v,y,k),t.call(this,x)}var T=this._params.complete;a.isFunction(T)&&T.call(this,T)}},_makeGeometry:function(e,t,a,i,r,n,s,l,d){for(var u=[],h=0,m=0;m<e.length-1;m+=2){var c=e[m],f=e[m+1];h=(c-t)/(i-t);var p=h*(l-n)+n;h=(f-a)/(r-a);var g=h*(d-s)+s;u.push({x:p,y:g})}return new o(u)},_makeFeature:function(e,t,a,i,o,r,s,l,d){var u=this._makeGeometry(e,t,a,i,o,r,s,l,d);return new n(u)},_loadError:function(){var e=this._params.error;a.isFunction(e)&&e.apply(this,parameters)}})});//# sourceMappingURL=JsonImport.js.map