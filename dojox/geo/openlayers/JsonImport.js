//>>built
define("dojox/geo/openlayers/JsonImport",["dojo/_base/declare","dojo/_base/xhr","dojo/_base/lang","dojo/_base/array","./LineString","./Collection","./GeometryFeature"],function(e,t,a,i,r,o,n){return e("dojox.geo.openlayers.JsonImport",null,{constructor:function(e){this._params=e},loadData:function(){var e=this._params;t.get({url:e.url,handleAs:"json",sync:!0,load:a.hitch(this,this._gotData),error:a.hitch(this,this._loadError)})},_gotData:function(e){var t=this._params.nextFeature;if(a.isFunction(t)){var r=e.layerExtent,s=r[0],d=r[1],l=s+r[2],h=d+r[3],u=e.layerExtentLL,m=u[0],c=u[1],f=m+u[2],p=c+u[3],y=m,g=p,v=f,b=c,M=e.features;for(var k in M){var w=M[k],I=w.shape,x=null;if(a.isArray(I[0])){var T=new Array;i.forEach(I,function(e){var t=this._makeGeometry(e,s,d,l,h,y,g,v,b);T.push(t)},this);var _=new o(T);x=new n(_),t.call(this,x)}else x=this._makeFeature(I,s,d,l,h,y,g,v,b),t.call(this,x)}var j=this._params.complete;a.isFunction(j)&&j.call(this,j)}},_makeGeometry:function(e,t,a,i,o,n,s,d,l){for(var h=[],u=0,m=0;m<e.length-1;m+=2){var c=e[m],f=e[m+1];u=(c-t)/(i-t);var p=u*(d-n)+n;u=(f-a)/(o-a);var y=u*(l-s)+s;h.push({x:p,y:y})}var g=new r(h);return g},_makeFeature:function(e,t,a,i,r,o,s,d,l){var h=this._makeGeometry(e,t,a,i,r,o,s,d,l),u=new n(h);return u},_loadError:function(){var e=this._params.error;a.isFunction(e)&&e.apply(this,parameters)}})});//# sourceMappingURL=JsonImport.js.map