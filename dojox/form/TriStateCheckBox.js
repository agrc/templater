//>>built
require({cache:{"url:dojox/form/resources/TriStateCheckBox.html":'<div class="dijit dijitReset dijitInline" role="presentation"\n	><div class="dojoxTriStateCheckBoxInner" dojoAttachPoint="stateLabelNode"></div\n	><input ${!nameAttrSetting} type="${type}" role="${type}" dojoAttachPoint="focusNode"\n	class="dijitReset dojoxTriStateCheckBoxInput" dojoAttachEvent="onclick:_onClick"\n/></div>\n'}}),define("dojox/form/TriStateCheckBox",["dojo/_base/kernel","dojo/_base/declare","dojo/_base/array","dojo/_base/lang","dojo/_base/event","dojo/query","dojo/dom-attr","dojo/text!./resources/TriStateCheckBox.html","dijit/form/Button","dijit/form/_ToggleButtonMixin","dojo/NodeList-dom"],function(e,t,a,i,n,o,r,s,l,d){return t("dojox.form.TriStateCheckBox",[l,d],{templateString:s,baseClass:"dojoxTriStateCheckBox",type:"checkbox",states:"",_stateLabels:null,stateValue:null,_currentState:0,_stateType:"False",readOnly:!1,checked:"",_aria_attr:"aria-checked",constructor:function(){this.states=[!1,"mixed",!0],this.checked=!1,this._stateLabels={False:"&#9633;",True:"&#8730;",Mixed:"&#9632;"},this.stateValues={False:!1,True:"on",Mixed:"mixed"}},_fillContent:function(e){},postCreate:function(){r.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType]),this.inherited(arguments)},startup:function(){this.set("checked",this.params.checked||this.states[this._currentState]),r.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType]),this.inherited(arguments)},_setIconClassAttr:null,_setCheckedAttr:function(e,t){var i=a.indexOf(this.states,e);i>=0&&(this._currentState=i,this._stateType=this._getStateType(e),r.set(this.focusNode,"value",this.stateValues[this._stateType]),r.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType]),this.inherited(arguments))},setChecked:function(t){e.deprecated("setChecked("+t+") is deprecated. Use set('checked',"+t+") instead.","","2.0"),this.set("checked",t)},_setStatesAttr:function(e){if(i.isArray(e))this._set("states",e);else if(i.isString(e)){var t={"true":!0,"false":!1,mixed:"mixed"};e=e.split(/\s*,\s*/);for(var a=0;a<e.length;a++)e[a]=void 0!==t[e[a]]?t[e[a]]:!1;this._set("states",e)}},_setReadOnlyAttr:function(e){this._set("readOnly",e),r.set(this.focusNode,"readOnly",e)},_setValueAttr:function(e,t){"string"==typeof e&&a.indexOf(this.states,e)<0&&(""==e&&(e="on"),this.stateValues.True=e,e=!0),this._created&&(this._currentState=a.indexOf(this.states,e),this.set("checked",e,t),r.set(this.focusNode,"value",this.stateValues[this._stateType]))},_setValuesAttr:function(e){this.stateValues.True=e[0]?e[0]:this.stateValues.True,this.stateValues.Mixed=e[1]?e[1]:this.stateValues.Mixed},_getValueAttr:function(){return this.stateValues[this._stateType]},reset:function(){this._hasBeenBlurred=!1,this.set("states",this.params.states||[!1,"mixed",!0]),this.stateValues=this.params.stateValues||{False:!1,True:"on",Mixed:"mixed"},this.set("values",this.params.values||[]),this.set("checked",this.params.checked||this.states[0])},_onFocus:function(){this.id&&o("label[for='"+this.id+"']").addClass("dijitFocusedLabel"),this.inherited(arguments)},_onBlur:function(){this.id&&o("label[for='"+this.id+"']").removeClass("dijitFocusedLabel"),this.mouseFocus=!1,this.inherited(arguments)},_onClick:function(e){return this.readOnly||this.disabled?(n.stop(e),!1):(this.click(),this.onClick(e))},click:function(){this._currentState>=this.states.length-1?this._currentState=0:-1==this._currentState?this.fixState():this._currentState++;var e=this._currentState;this.set("checked",this.states[this._currentState]),this._currentState=e,r.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType])},fixState:function(){this._currentState=this.states.length-1},_getStateType:function(e){return e?"mixed"==e?"Mixed":"True":"False"},_onMouseDown:function(){this.mouseFocus=!0}})});//# sourceMappingURL=TriStateCheckBox.js.map