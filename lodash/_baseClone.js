//>>built
define("lodash/_baseClone",["./_Stack","./_arrayEach","./_assignValue","./_baseAssign","./_baseAssignIn","./_cloneBuffer","./_copyArray","./_copySymbols","./_copySymbolsIn","./_getAllKeys","./_getAllKeysIn","./_getTag","./_initCloneArray","./_initCloneByTag","./_initCloneObject","./isArray","./isBuffer","./isMap","./isObject","./isSet","./keys"],function(e,t,i,a,r,o,n,s,l,d,h,c,u,m,f,p,g,y,v,b,_){function x(A,E,N,L,P,B){var G,R=E&M,D=E&j,z=E&w;if(N&&(G=P?N(A,L,P,B):N(A)),G!==k)return G;if(!v(A))return A;var O=p(A);if(O){if(G=u(A),!R)return n(A,G)}else{var H=c(A),q=H==C||H==S;if(g(A))return o(A,R);if(H==T||H==I||q&&!P){if(G=D||q?{}:f(A),!R)return D?l(A,r(G,A)):s(A,a(G,A))}else{if(!F[H])return P?A:{};G=m(A,H,R)}}B||(B=new e);var W=B.get(A);if(W)return W;if(B.set(A,G),b(A))return A.forEach(function(e){G.add(x(e,E,N,e,A,B))}),G;if(y(A))return A.forEach(function(e,t){G.set(t,x(e,E,N,t,A,B))}),G;var V=z?D?h:d:D?keysIn:_,U=O?k:V(A);return t(U||A,function(e,t){U&&(t=e,e=A[t]),i(G,t,x(e,E,N,t,A,B))}),G}var k,M=1,j=2,w=4,I="[object Arguments]",C="[object Function]",S="[object GeneratorFunction]",T="[object Object]",F={};return F[I]=F["[object Array]"]=F["[object ArrayBuffer]"]=F["[object DataView]"]=F["[object Boolean]"]=F["[object Date]"]=F["[object Float32Array]"]=F["[object Float64Array]"]=F["[object Int8Array]"]=F["[object Int16Array]"]=F["[object Int32Array]"]=F["[object Map]"]=F["[object Number]"]=F[T]=F["[object RegExp]"]=F["[object Set]"]=F["[object String]"]=F["[object Symbol]"]=F["[object Uint8Array]"]=F["[object Uint8ClampedArray]"]=F["[object Uint16Array]"]=F["[object Uint32Array]"]=!0,F["[object Error]"]=F[C]=F["[object WeakMap]"]=!1,x});//# sourceMappingURL=_baseClone.js.map